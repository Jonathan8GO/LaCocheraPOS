-------------- ESTADOS --------------

CREATE TABLE ESTADOS(
ID_ESTADO NUMBER(3) CONSTRAINT ID_ESTADOS_PK PRIMARY KEY,
NOMBRE_ESTADO VARCHAR2(50) CONSTRAINT NOMBRE_ESTADOS_NN NOT NULL
);

INSERT INTO ESTADOS (ID_ESTADO, NOMBRE_ESTADO) VALUES (15, 'México');

SELECT * FROM ESTADOS;


-------------- MUNICIPIOS --------------

CREATE TABLE MUNICIPIOS(
ID_MUNICIPIO NUMBER(3) CONSTRAINT ID_MUNICIPIOS_PK PRIMARY KEY,
NOMBRE_MUNICIPIO VARCHAR2(50) CONSTRAINT NOM_MUNICIPIOS_NN NOT NULL,
ID_ESTADO NUMBER(3) CONSTRAINT ID_EST_MUNICIPIOS_FK REFERENCES ESTADOS(ID_ESTADO)
);

INSERT INTO MUNICIPIOS (ID_MUNICIPIO, NOMBRE_MUNICIPIO, ID_ESTADO) VALUES (014 , 'Atlacomulco',15);

INSERT INTO MUNICIPIOS (ID_MUNICIPIO, NOMBRE_MUNICIPIO, ID_ESTADO) VALUES ( 054 ,'Metepec',15);

INSERT INTO MUNICIPIOS (ID_MUNICIPIO, NOMBRE_MUNICIPIO, ID_ESTADO) VALUES ( 115 , 'Xonacatlán', 15);

INSERT INTO MUNICIPIOS (ID_MUNICIPIO, NOMBRE_MUNICIPIO, ID_ESTADO) VALUES (106 , 'Toluca', 15);

SELECT * FROM MUNICIPIOS
WHERE ID_MUNICIPIO = 106;

COMMIT;

-------------- PRODUCTOS --------------

CREATE TABLE PRODUCTOS (
ID_PRODUCTO NUMBER CONSTRAINT ID_PRODUCTOS_PK PRIMARY KEY,
NOMBRE_PRODUCTO VARCHAR2(30) CONSTRAINT NOMBRE_PRODUCTOS_UK UNIQUE
CONSTRAINT NOMBRE_PRODUCTOS_NN NOT NULL,
PRECIO_PRODUCTO NUMBER (6,2) CONSTRAINT PRECIO_PRODUCTOS_NN NOT NULL,
STATUS_PRODUCTO NUMBER(2) DEFAULT 1
CONSTRAINT STATUS_PRODUCTOS_NN NOT NULL 
);

DESC PRODUCTOS;


CREATE SEQUENCE SEC_PRODUCTOS START WITH 1;


CREATE OR REPLACE TRIGGER PRODUCTOS_ID_TG
BEFORE INSERT ON PRODUCTOS
FOR EACH ROW
BEGIN
	SELECT SEC_PRODUCTOS.NEXTVAL
	INTO :NEW.ID_PRODUCTO
	FROM DUAL;
END;


CREATE OR REPLACE PROCEDURE CONSULTAR_PRODUCTOS (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM PRODUCTOS 
	ORDER BY ID_PRODUCTO;
END;


CREATE OR REPLACE PROCEDURE INSERTAR_PRODUCTOS ( NOMBRE IN VARCHAR2, 
	PRECIO IN VARCHAR2)
AS 
BEGIN
	INSERT INTO PRODUCTOS (NOMBRE_PRODUCTO, PRECIO_PRODUCTO ) 
	VALUES (NOMBRE, PRECIO);
	COMMIT;	
END;


CREATE OR REPLACE PROCEDURE BAJA_PRODUCTOS ( ID IN NUMBER )
AS 
BEGIN
	UPDATE PRODUCTOS SET STATUS_PRODUCTO = 0
	WHERE ID_PRODUCTO = ID ;
	COMMIT;
END;

CREATE OR REPLACE PROCEDURE REACTIVAR_PRODUCTO ( ID IN NUMBER )
AS 
BEGIN
	UPDATE PRODUCTOS SET STATUS_PRODUCTO = 1
	WHERE ID_PRODUCTO = ID ;
	COMMIT;
END;


CREATE OR REPLACE PROCEDURE PRECIO_PRODUCTOS ( ID IN NUMBER,
PRECIO IN NUMBER )
AS 
BEGIN
	UPDATE PRODUCTOS SET PRECIO_PRODUCTO = PRECIO 
	WHERE ID_PRODUCTO = ID ;
	COMMIT;
END;


CREATE VIEW PRODUCTOS_EXIST_VIEW AS 
 SELECT ID_PRODUCTO,
 NOMBRE_PRODUCTO AS NOMBRE,
 PRECIO_PRODUCTO AS PRECIO
 FROM PRODUCTOS
 WHERE STATUS_PRODUCTO = 1;


CREATE OR REPLACE PROCEDURE CONSULTAR_PRODUC_EXIST_VW (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM PRODUCTOS_EXIST_VIEW ORDER BY NOMBRE;
END;

DROP VIEW PRODUCTOS_EXIST_VIEW;

CREATE VIEW PRODUCTOS_NO_EXIST_VIEW AS 
 SELECT ID_PRODUCTO,
 NOMBRE_PRODUCTO AS NOMBRE,
 PRECIO_PRODUCTO AS PRECIO
 FROM PRODUCTOS
 WHERE STATUS_PRODUCTO = 0;


CREATE OR REPLACE PROCEDURE CONSULTAR_PRODUC_NO_EXIST_VW (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM PRODUCTOS_NO_EXIST_VIEW 
    ORDER BY NOMBRE;
END;




-------------- SUCURSALES --------------

CREATE TABLE SUCURSALES (
ID_SUCURSAL NUMBER CONSTRAINT ID_SUCURSALES_PK PRIMARY KEY,
NOMBRE_SUC VARCHAR2(20) CONSTRAINT  NOMBRE_SUCURSALES_NN NOT NULL
CONSTRAINT NOMBRE_SUCURSALES_UK UNIQUE,
ID_MUNICIPIO NUMBER(3) CONSTRAINT ID_MUN_SUCURSALES_FK REFERENCES MUNICIPIOS(ID_MUNICIPIO)
CONSTRAINT ID_MUN_SUCURSALES_NN NOT NULL,
CALLE_SUC VARCHAR2(30) CONSTRAINT CALLE_SUCURSALES_NN NOT NULL
);

CREATE SEQUENCE SEC_SUCURSALES START WITH 1;


CREATE OR REPLACE TRIGGER SUCURSALES_ID_TG
BEFORE INSERT ON SUCURSALES
FOR EACH ROW
BEGIN
	SELECT SEC_SUCURSALES.NEXTVAL
	INTO :NEW.ID_SUCURSAL
	FROM DUAL;
END;


CREATE OR REPLACE PROCEDURE CONSULTAR_MUNICIPIOS (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM MUNICIPIOS 
	ORDER BY ID_MUNICIPIO;
END;

CREATE OR REPLACE PROCEDURE CONSULTAR_SUCURSALES (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM SUCURSALES 
	ORDER BY ID_SUCURSAL;
END;


CREATE OR REPLACE PROCEDURE INSERTAR_SUCURSALES ( NOMBRE IN VARCHAR2,
	NO_MUNICIPIO IN NUMBER,
	CALLE IN VARCHAR2)
AS 
BEGIN
	INSERT INTO SUCURSALES (NOMBRE_SUC, ID_MUNICIPIO, CALLE_SUC) VALUES (NOMBRE, NO_MUNICIPIO, CALLE);
	COMMIT;
END;


-------------- EMPLEADOS --------------

CREATE TABLE EMPLEADOS (
ID_EMPLEADO NUMBER CONSTRAINT ID_EMPLEADOS_PK PRIMARY KEY,
NOMBRE_EMP VARCHAR2(30) CONSTRAINT NOMBRE_EMPLEADOS_NN NOT NULL,
AP_PATERNO VARCHAR2(20) CONSTRAINT PATERNO_EMPLEADOS_NN NOT NULL,
AP_MATERNO VARCHAR2(20) CONSTRAINT MATERNO_EMPLEADOS_NN NOT NULL,
EDAD_EMP NUMBER (2) CONSTRAINT EDAD_EMPLEADOS_NN NOT NULL,
SEXO_EMP CHAR(1) CONSTRAINT SEXO_EMPLEADOS_NN NOT NULL,
ID_SUCURSAL NUMBER CONSTRAINT ID_SUC_EMPLEADOS_FK REFERENCES SUCURSALES(ID_SUCURSAL)
CONSTRAINT ID_SUC_EMPLEADOS_NN NOT NULL,
STATUS_EMP NUMBER (2) DEFAULT 1 
CONSTRAINT STATUS_EMPLEADOS_NN NOT NULL
);

CREATE SEQUENCE SEC_EMPLEADOS START WITH 1;


CREATE OR REPLACE TRIGGER EMPLEADOS_ID_TG
BEFORE INSERT ON EMPLEADOS
FOR EACH ROW
BEGIN
	SELECT SEC_EMPLEADOS.NEXTVAL
	INTO :NEW.ID_EMPLEADO
	FROM DUAL;
END;


CREATE OR REPLACE PROCEDURE CONSULTAR_EMPLEADOS (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM EMPLEADOS 
	ORDER BY ID_EMPLEADO;
END;


CREATE OR REPLACE PROCEDURE INSERTAR_EMPLEADOS ( NOMBRE IN VARCHAR2,
	PATERNO IN VARCHAR2,
	MATERNO IN VARCHAR2,
	EDAD IN NUMBER,
	SEXO IN CHAR,
	ID_SUC IN NUMBER)
AS 
BEGIN
	INSERT INTO EMPLEADOS (NOMBRE_EMP, AP_PATERNO, AP_MATERNO, EDAD_EMP, SEXO_EMP, ID_SUCURSAL) 
	VALUES (NOMBRE, PATERNO, MATERNO, EDAD, SEXO, ID_SUC);
	COMMIT;
END;

CREATE OR REPLACE PROCEDURE BAJA_EMPLEADOS ( ID IN NUMBER )
AS 
BEGIN
	UPDATE EMPLEADOS SET STATUS_EMP = 0
	WHERE ID_EMPLEADO = ID ;
	COMMIT;
END;

drop view EMP_ACTIVOS_VIEW;

CREATE OR REPLACE VIEW EMP_ACTIVOS_VIEW AS 
 SELECT EMP.ID_EMPLEADO "NO_EMPLEADO",
 EMP.NOMBRE_EMP||' '||EMP.AP_PATERNO||' '||EMP.AP_MATERNO "NOMBRE COMPLETO",
 SUC.NOMBRE_SUC "SUCURSAL"
 FROM EMPLEADOS EMP JOIN SUCURSALES SUC
 USING (ID_SUCURSAL)
 WHERE STATUS_EMP = 1;


CREATE OR REPLACE PROCEDURE CONSULTAR_EMP_ACTIVOS_VW (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM EMP_ACTIVOS_VIEW ORDER BY "NO_EMPLEADO";
END;


CREATE OR REPLACE VIEW EMP_INACTIVOS_VIEW AS 
SELECT EMP.ID_EMPLEADO "NO. EMPLEADO",
 EMP.NOMBRE_EMP||' '||EMP.AP_PATERNO||' '||EMP.AP_MATERNO "NOMBRE COMPLETO",
 SUC.NOMBRE_SUC "SUCURSAL"
 FROM EMPLEADOS EMP JOIN SUCURSALES SUC
 USING (ID_SUCURSAL)
 WHERE STATUS_EMP = 0;


CREATE OR REPLACE PROCEDURE CONSULTAR_EMP_INACTIVOS_VW (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM EMP_INACTIVOS_VIEW ORDER BY "NO. EMPLEADO";
END;






-------------- VENTAS --------------


CREATE TABLE VENTAS (
ID_VENTA NUMBER CONSTRAINT ID_VENTAS_PK PRIMARY KEY,
FECHA_VENTA DATE DEFAULT SYSDATE
CONSTRAINT FECHA_VENTAS_NN NOT NULL,
TOTAL_VENTA NUMBER CONSTRAINT TOTAL_VENTAS_NN NOT NULL,
ID_SUCURSAL NUMBER CONSTRAINT ID_SUC_VENTAS_FK REFERENCES SUCURSALES (ID_SUCURSAL)
CONSTRAINT ID_SUCFK_NN NOT NULL ,
ID_EMPLEADO NUMBER CONSTRAINT ID_EMP_VENTAS_FK REFERENCES EMPLEADOS (ID_EMPLEADO) 
CONSTRAINT ID_EMPFK_VENTAS_NN NOT NULL
);

alter table ventas drop column TOTAL_VENTA;

alter table ventas ADD TOTAL_VENTA NUMBER CONSTRAINT TOTAL_VENTAS_NN NOT NULL;

alter table ventas ADD FECHA_VENTA DATE DEFAULT SYSDATE
CONSTRAINT FECHA_VENTAS_NN NOT NULL;


CREATE SEQUENCE SEC_VENTAS START WITH 1;
 
CREATE OR REPLACE TRIGGER VENTAS_ID_TG

BEFORE INSERT ON VENTAS
FOR EACH ROW
BEGIN
	SELECT SEC_VENTAS.NEXTVAL
	INTO :NEW.ID_VENTA
	FROM DUAL;
END;


CREATE OR REPLACE PROCEDURE CONSULTAR_VENTAS (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM VENTAS 
	ORDER BY ID_VENTA;
END;


CREATE OR REPLACE PROCEDURE INSERTAR_VENTAS (
	TOTAL IN NUMBER,
    NO_SUCURSAL IN NUMBER,
	NO_EMPLEADO IN NUMBER
	)
AS 
BEGIN
	INSERT INTO VENTAS (TOTAL_VENTA, ID_SUCURSAL, ID_EMPLEADO) 
	VALUES (TOTAL,NO_SUCURSAL, NO_EMPLEADO);
	COMMIT;
END; 


CREATE OR REPLACE PROCEDURE INSERTAR_VENTAS (	
    NO_SUCURSAL IN NUMBER,
	NO_EMPLEADO IN NUMBER
	)
AS 
BEGIN
	INSERT INTO VENTAS (ID_SUCURSAL, ID_EMPLEADO) 
	VALUES (NO_SUCURSAL, NO_EMPLEADO);
	COMMIT;
END;


CREATE OR REPLACE PROCEDURE TOTAL_VENTA (
	TOTALV IN NUMBER
	)
AS 
BEGIN
	UPDATE VENTAS SET TOTAL_VENTA = TOTALV;
	COMMIT;
END;


CREATE OR REPLACE PROCEDURE CONSULTAR_VENTAS (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM VENTAS 
	ORDER BY ID_VENTA;
END;


CREATE OR REPLACE VIEW VENTAS_VIEW AS 
SELECT VENT.ID_VENTA "NO VENTA",
VENT.
TIC.TOTAL_VENTA "PAGO TOTAL"
FROM TICKETPRB TIC JOIN VENTASPRB VENT
ON VENT.ID_VENTA = TIC.ID_VENTA;



-------- TICKET ------
CREATE TABLE VENTAS (
ID_VENTA NUMBER CONSTRAINT ID_VENTAS_PK PRIMARY KEY,
FECHA_VENTA DATE DEFAULT SYSDATE
CONSTRAINT FECHA_VENTAS_NN NOT NULL,
TOTAL_VENTA NUMBER DEFAULT 0 CONSTRAINT TOTAL_VENTAS_NN NOT NULL,
ID_SUCURSAL NUMBER CONSTRAINT ID_SUC_VENTAS_FK REFERENCES SUCURSALES (ID_SUCURSAL)
CONSTRAINT ID_SUCFK_NN NOT NULL ,
ID_EMPLEADO NUMBER CONSTRAINT ID_EMP_VENTAS_FK REFERENCES EMPLEADOS (ID_EMPLEADO) 
CONSTRAINT ID_EMPFK_VENTAS_NN NOT NULL
);


CREATE TABLE TICKET (
ID_TICKET NUMBER CONSTRAINT ID_TICK_PK PRIMARY KEY,
ID_PRODUCTO NUMBER CONSTRAINT ID_PROD_TICK_FK REFERENCES PRODUCTOS (ID_PRODUCTO)
CONSTRAINT ID_PRODFK_TICK_NN NOT NULL,
PRECIO_UNITARIO NUMBER CONSTRAINT PRECIOUNIT_TICK_NN NOT NULL,
CANTIDAD NUMBER CONSTRAINT CANTIDAD_TICK_NN NOT NULL,
ID_VENTA NUMBER CONSTRAINT IDVENTA_TICK_NN NOT NULL
CONSTRAINT IDVENT_TICK_FK  REFERENCES VENTAS (ID_VENTA),
TOTAL_TICK NUMBER CONSTRAINT TOTAL_TICKET_NN NOT NULL
);


DELETE  FROM TICKET ;

DROP SEQUENCE SEC_TICKET;
CREATE SEQUENCE SEC_TICKET START WITH 1;
 
CREATE OR REPLACE TRIGGER TICKET_ID_TG
BEFORE INSERT ON TICKET
FOR EACH ROW
BEGIN
	SELECT SEC_TICKET.NEXTVAL
	INTO :NEW.ID_TICKET
	FROM DUAL;
    SELECT SEC_VENTAS.CURRVAL    -- SI NO JALA --
    INTO :NEW.ID_VENTA
    FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TICKET_ID_TG
BEFORE INSERT ON TICKET
FOR EACH ROW
BEGIN
	SELECT SEC_TICKET.NEXTVAL
	INTO :NEW.ID_TICKET
	FROM DUAL;    
END;

/*CREATE OR REPLACE TRIGGER TICKET_IDVENTA_TG
BEFORE INSERT ON TICKET
FOR EACH ROW
BEGIN
   SELECT SEC_VENTA.CURRVAL    -- SI NO JALA --
    INTO :NEW.ID_VENTA
    FROM DUAL;
END;*/



CREATE OR REPLACE PROCEDURE INSERTAR_TICKET ( NO_VENTA IN NUMBER,  -- se agrego noventa
	NO_PRODUCTO IN  NUMBER,
    PRECIO IN NUMBER,
	CANTIDAD IN NUMBER,
    TOTAL IN NUMBER
	)
AS 
BEGIN
	INSERT INTO TICKET (ID_VENTA, ID_PRODUCTO, PRECIO_UNITARIO, CANTIDAD, TOTAL_TICK) 
	VALUES (NO_VENTA, NO_PRODUCTO, PRECIO, CANTIDAD, TOTAL);
	COMMIT;
END;


DESC TICKET;
DESC SUCURSALES;
DESC VENTAS;
DESC EMPLEADOS;

CREATE OR REPLACE VIEW TICKET_VW AS 
 SELECT TIC.ID_TICKET "ID",
 TIC.ID_PRODUCTO, 
 TIC.PRECIO_UNITARIO,
TIC.CANTIDAD "CANTIDAD",
VE.ID_VENTA,
TIC.TOTAL_TICK "TOTAL",
SUC.NOMBRE_SUC "SUCURSAL",
EMP.NOMBRE_EMP "EMPLEADO"
FROM TICKET TIC JOIN VENTAS VE
ON (TIC.ID_VENTA = VE.ID_VENTA)
JOIN SUCURSALES SUC
ON (VE.ID_SUCURSAL = SUC.ID_SUCURSAL)
JOIN EMPLEADOS EMP
ON (VE.ID_EMPLEADO = EMP.ID_EMPLEADO);
 

CREATE OR REPLACE PROCEDURE CONSULTAR_TICK (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM TICKET_VW ORDER BY "ID";
END;




CREATE OR REPLACE PROCEDURE CONSULTAR_TICK (REGISTROS OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN REGISTROS FOR SELECT * FROM TICKET 
	ORDER BY ID_TICKET;
END;


select * from ventas;

select * from ticket;

select sec_ventas.currval
from dual;

desc ventas;

SELECT SEC_TICKET.currval
	FROM DUAL;
/*
CREATE TABLE VENTASPRB (
ID_VENTA NUMBER CONSTRAINT  ID_VENTASPRB_PK PRIMARY KEY,
TOTAL_VENTA NUMBER CONSTRAINT TOTAL_VENTASPRB_NN NOT NULL
);

CREATE SEQUENCE SEC_VENTASPRB START WITH 1;
 
CREATE OR REPLACE TRIGGER VENTASPRB_ID_TG
BEFORE INSERT ON VENTASPRB
FOR EACH ROW
BEGIN
	SELECT SEC_VENTASPRB.NEXTVAL
	INTO :NEW.ID_VENTA
	FROM DUAL;
END;


CREATE OR REPLACE PROCEDURE OBTENERID_VENTAS ( ID OUT SYS_REFCURSOR)
AS 
BEGIN
	OPEN I FOR SELECT * FROM VENTAS 
	ORDER BY ID_VENTA;
END;



CREATE TABLE TICKETPRB (
ID_TICKET NUMBER CONSTRAINT ID_TICKPRB_PK PRIMARY KEY,
FECHA_VENTA DATE DEFAULT SYSDATE
CONSTRAINT FECHA_TICK_NN NOT NULL,
PRECIO_UNITARIO NUMBER CONSTRAINT PRECIOUNIT_TICK_NN NOT NULL,
CANTIDAD NUMBER CONSTRAINT CANTIDAD_TICK_NN NOT NULL,
TOTAL_VENTA NUMBER CONSTRAINT TOTAL_TICKPRB_NN NOT NULL,
ID_VENTA NUMBER CONSTRAINT IDVENTA_TICKPRB_NN NOT NULL
CONSTRAINT IDVENTFK  REFERENCES VENTASPRB (ID_VENTA)
);

CREATE SEQUENCE SEC_TICPRB START WITH 1;
 
CREATE OR REPLACE TRIGGER TICPRB_ID_TG
BEFORE INSERT ON TICPRB
FOR EACH ROW
BEGIN
	SELECT SEC_TICPRB.NEXTVAL
	INTO :NEW.ID_TICKET
	FROM DUAL;
END;





INSERT INTO VENTASPRB (ID_VENTA)
VALUES (1);

INSERT INTO TICKETPRB (
ID_TICKET,
PRECIO_UNITARIO,
CANTIDAD,
ID_PRODUCTO,
TOTAL_VENTA,
ID_VENTA
)
VALUES (1,10,1,1,10,1);

INSERT INTO TICKETPRB (
ID_TICKET,
PRECIO_UNITARIO,
CANTIDAD,
ID_PRODUCTO,
TOTAL_VENTA,
ID_VENTA
)
VALUES (2,20,1,1,20,1);

SELECT VENT.ID_VENTA "NO VENTA",
TIC.ID_PRODUCTO "NO PRODUCTO",
TIC.TOTAL_VENTA "PAGO TOTAL"
FROM TICKETPRB TIC JOIN VENTASPRB VENT
ON VENT.ID_VENTA = TIC.ID_VENTA;

SELECT SUM(CANTIDAD)
FROM TICKETPRB
WHERE ID_VENTA = 1
;

SELECT ID_VENTA,
(SELECT SUM(CANTIDAD)
FROM TICKETPRB
WHERE ID_VENTA = 1) "NO PRODUCTOS"
FROM TICKETPRB

DROP TABLE TICKETPRB;


*/